name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'release-*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      continue-on-error: true

    - name: Cache JUCE
      id: check-juce-cache
      uses: actions/cache@v3
      with:
        path: JUCE
        key: ${{ runner.os }}-juce-7.0.5
      continue-on-error: true

    - name: Download JUCE
      if: steps.check-juce-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          curl -LO https://github.com/juce-framework/JUCE/releases/download/7.0.5/juce-7.0.5-osx.zip
          unzip juce-7.0.5-osx.zip
        else
          curl -LO https://github.com/juce-framework/JUCE/releases/download/7.0.5/juce-7.0.5-windows.zip
          unzip juce-7.0.5-windows.zip
        fi
        
        echo "Downloaded JUCE"
        pwd
        ls

      continue-on-error: true
      
    - name: Cache FRUT directory
      id: cache-frut
      uses: actions/cache@v3
      with:
        path: FRUT/build
        key: ${{ runner.os }}-frut-${{ hashFiles('FRUT/build') }}
      continue-on-error: true

    - name: Clone FRUT
      if: steps.cache-frut.outputs.cache-hit != 'true'
      run: |
        git clone https://github.com/McMartin/FRUT.git

        echo "Downloaded FRUT"
        pwd
        ls
      continue-on-error: true

    - name: Build FRUT
      if: steps.cache-frut.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "Creating build folder "
        mkdir FRUT/build

        echo "Moving to FRUT/build"
        cd FRUT/build
        
        echo "Building Jucer2CMake"
        cmake .. -DCMAKE_INSTALL_PREFIX="../compiled" -DJUCE_ROOT="../../JUCE"
        cmake --build . --target install --parallel
        
        echo "Moving to DR Filter"
        cd ../..
        pwd
        ls
      continue-on-error: true

    - name: Generate CMakeLists.txt
      if: steps.cache-frut.outputs.cache-hit != 'true'
      shell: bash
      run: |
        echo "Generate CMakeLists.txt"
        pwd
        ls
        ./FRUT/compiled/FRUT/bin/Jucer2CMake reprojucer "DR Filter.jucer" ./FRUT/compiled/FRUT/cmake/Reprojucer.cmake

      continue-on-error: true

    - name: Build DR Filter
      shell: bash
      run: |
        echo "Build DR Filter"
        pwd
        ls
        mkdir Builds
        
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          cmake -B ./Builds -G Xcode
        else
          cmake -B ./Builds -G "Visual Studio 16 2019" -A x64
        fi

        cmake --build Builds --parallel --config Release
      continue-on-error: true

    - name: Upload MacOS Binaries
      uses: actions/upload-artifact@v3
      with:
        name: DR-Filter-MacOS
        path: |
          ./Builds/Release/DR\ Filter.vst3
          ./Builds/Release/DR\ Filter.component
        continue-on-error: true

    - name: Upload Windows Binaries
      uses: actions/upload-artifact@v3
      with:
        name: DR-Filter-Windows
        path: ./Builds/Release/DR\ Filter.vst3
      continue-on-error: true