name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'release-*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3

    - name: Download JUCE
      if: steps.check-juce-cache.outputs.cache-hit != 'true'
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          curl -LO https://github.com/juce-framework/JUCE/releases/download/7.0.5/juce-7.0.5-osx.zip
          unzip juce-7.0.5-osx.zip
        else
          curl -LO https://github.com/juce-framework/JUCE/releases/download/7.0.5/juce-7.0.5-windows.zip
          unzip juce-7.0.5-windows.zip
        fi
      
    - name: Cache JUCE
      id: check-juce-cache
      uses: actions/cache@v3
      with:
        path: JUCE
        key: ${{ runner.os }}-juce-7.0.5

    - name: Clone FRUT
      run: |
        git clone https://github.com/McMartin/FRUT.git

    - name: Cache FRUT directory
      id: cache-frut
      uses: actions/cache@v3
      with:
        path: FRUT/build
        key: ${{ runner.os }}-frut-${{ hashFiles('FRUT/build') }}
      if: steps.cache-frut.outputs.cache-hit != 'true'
        
    - name: Generate CMakeLists.txt
      if: steps.cache-frut.outputs.cache-hit != 'true'
      shell: bash
      run: |
        cd FRUT
        mkdir build && cd build
        cmake .. -DCMAKE_INSTALL_PREFIX="../prefix" -DJUCE_ROOT="../../JUCE"
        cmake --build . --target install
      
    - name: Build
      shell: bash
      run: |
        pwd
        cd ..
        pwd
        # Convert the Jucer project to CMakeLists.txt
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          ./FRUT/prefix/FRUT/bin/Jucer2CMake reprojucer "./DR Filter.jucer" "./FRUT/prefix/FRUT/cmake/Reprojucer.cmake"
        else
          ./FRUT/prefix/FRUT/bin/Jucer2CMake reprojucer ".\\DR Filter.jucer" ".\\FRUT\\prefix\\FRUT\\cmake\\Reprojucer.cmake"
        fi

        cd build
        
        # Build the project using CMake
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          cmake ..
          cmake --build .
        else
          cmake .. -G"Visual Studio 16 2019" -A x64
          cmake --build . --config Release
        fi
