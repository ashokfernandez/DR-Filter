name: CI

on:
  push:
    branches:
      - master
    tags:
      - 'release-*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, macos-latest]

    steps:
    - uses: actions/checkout@v3
      
    - name: Setup MSBuild.exe
      if: matrix.os == 'windows-latest'
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Cache JUCE
      id: cache-juce
      uses: actions/cache@v3
      with:
        path: JUCE
        key: ${{ runner.os }}-juce-7.0.5

    - name: Download JUCE
      if: steps.cache-juce.outputs.cache-hit != 'true'
      shell: bash
      run: |
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          curl -LO https://github.com/juce-framework/JUCE/releases/download/7.0.5/juce-7.0.5-osx.zip
          unzip juce-7.0.5-osx.zip
        else
          curl -LO https://github.com/juce-framework/JUCE/releases/download/7.0.5/juce-7.0.5-windows.zip
          unzip juce-7.0.5-windows.zip
        fi

    - name: Print directory structure
      run: |
        pwd
        ls -R
      
    - name: Build
      shell: bash
      run: |
        # Use Projucer to generate your project files
        if [ "${{ matrix.os }}" == "macos-latest" ]; then
          echo "Running Projucer..."
          ./JUCE/Projucer.app/Contents/MacOS/Projucer --set-global-search-path osx defaultJuceModulePath "${GITHUB_WORKSPACE}/JUCE/modules" --resave "DR Filter.jucer" || echo "Projucer command failed"
      
          if [ ! -d "DR Filter/Builds/MacOSX" ]; then
            echo "Build directory not found! Here is the current directory structure:"
            find . -name '*' | grep -v "^./JUCE"
            exit 1
          fi
      
          xcodebuild -project "DR Filter/Builds/MacOSX/DR Filter.xcodeproj" -configuration Release -target "DR Filter"
        else
          echo "Running Projucer..."
          ./JUCE/Projucer.exe --set-global-search-path windows defaultJuceModulePath "${GITHUB_WORKSPACE}/JUCE/modules" --resave "DR Filter.jucer" || echo "Projucer command failed"
          
          if [ ! -d "DR Filter/Builds/VisualStudio2019" ]; then
            echo "Build directory not found! Here is the current directory structure:"
            find . -name '*' | grep -v "^./JUCE"
            exit 1
          fi
      
          msbuild "DR Filter/Builds/VisualStudio2019/DR Filter.vcxproj" /p:Configuration=Release /p:Platform=x64
        fi
        
        